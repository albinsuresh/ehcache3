/*
 * Copyright Terracotta, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "me.champeau.gradle:jmh-gradle-plugin:0.3.1"
  }
}

apply plugin: "me.champeau.gradle.jmh"
apply plugin: EhDeploy

dependencies {
  compileOnly project(':api')
  compileOnly project(':xml')
  compile project(':clustered:common')
  compile "org.terracotta.entities:clustered-map-client:$parent.clusteredMapVersion"
  compile "org.terracotta:entity-client-api:$parent.entityApiVersion"

  testCompile project(':api')
  testCompile project(':xml')
  testCompile project(':transactions')
  testCompile(project(':clustered:server')) {
    exclude group: 'org.terracotta.internal', module: 'tc-config-parser'
  }
  testCompile "org.terracotta.entities:clustered-map-server:$parent.clusteredMapVersion"
  testCompile "org.terracotta:entity-test-lib:$parent.entityTestLibVersion"
  testCompile "org.terracotta:passthrough-server:$parent.terracottaPassthroughTestingVersion"
}

jmh {
  benchmarkMode = ['avgt']
  timeUnit = 'us'
  fork = 1
  warmupIterations = 10
  iterations = 10
}
